name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm run test:coverage
        
      - name: Build module
        run: npm run build
        
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Update module.json with version
        run: |
          jq --arg version "${{ steps.version.outputs.VERSION }}" '.version = $version' module.json > module.json.tmp
          mv module.json.tmp module.json
          
      - name: Create module archive
        run: |
          # Create release directory
          mkdir -p release/task-and-trigger
          
          # Copy necessary files
          cp -r dist/* release/task-and-trigger/
          cp module.json release/task-and-trigger/
          cp -r languages release/task-and-trigger/
          cp -r styles release/task-and-trigger/
          cp -r templates release/task-and-trigger/
          cp README.md release/task-and-trigger/
          cp API.md release/task-and-trigger/
          cp USAGE-EXAMPLES.md release/task-and-trigger/
          
          # Create zip archive
          cd release
          zip -r "../task-and-trigger-v${{ steps.version.outputs.VERSION }}.zip" task-and-trigger/
          cd ..
          
      - name: Generate changelog
        id: changelog
        run: |
          # Simple changelog generation - can be enhanced with conventional commits
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes in v${{ steps.version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT || echo "- Initial release" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Task & Trigger v${{ steps.version.outputs.VERSION }}"
          body: |
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## Installation
            
            1. Download the `task-and-trigger-v${{ steps.version.outputs.VERSION }}.zip` file
            2. Extract it to your Foundry `Data/modules/` directory
            3. Restart Foundry and enable the module in your world
            
            ## Module Manifest URL
            
            ```
            https://github.com/rayners/fvtt-task-and-trigger/releases/download/v${{ steps.version.outputs.VERSION }}/module.json
            ```
            
          files: |
            task-and-trigger-v${{ steps.version.outputs.VERSION }}.zip
            module.json
          draft: false
          prerelease: false
          
      - name: Update latest release download URL
        run: |
          # Update module.json download URL for this release
          DOWNLOAD_URL="https://github.com/rayners/fvtt-task-and-trigger/releases/download/v${{ steps.version.outputs.VERSION }}/task-and-trigger-v${{ steps.version.outputs.VERSION }}.zip"
          jq --arg url "$DOWNLOAD_URL" '.download = $url' module.json > module.json.tmp
          mv module.json.tmp module.json
          
      - name: Upload updated module.json
        uses: softprops/action-gh-release@v1
        with:
          files: module.json
          tag_name: v${{ steps.version.outputs.VERSION }}